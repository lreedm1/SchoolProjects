{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs30 \cf0 class StackWithTwoQueues:\
    Initialize:\
        Q1 \uc0\u8592  empty queue\
        Q2 \uc0\u8592  empty queue\
        total_elements \uc0\u8592  0\
        group_size \uc0\u8592  0\
        q2_front_distance \uc0\u8592  0\
\
    Function Push():\
        total_elements \uc0\u8592  total_elements + 1\
        ReorderQ2()\
        \
        Enqueue total_elements to Q1\
        \
        if total_elements is a perfect square AND total_elements > 3:\
            MoveGroupToQ2()\
        \
        return total_elements\
\
    Function Pop():\
        if IsEmpty():\
            throw EmptyStackError\
        \
        ReorderQ2()\
        \
        if Q1 is empty:\
            MoveGroupFromQ2ToQ1()\
        \
        result \uc0\u8592  PopFromQ1()\
        total_elements \uc0\u8592  total_elements - 1\
        return result\
\
    Function MoveGroupToQ2():\
        group_size \uc0\u8592  group_size + 2\
        for i \uc0\u8592  1 to group_size:\
            item \uc0\u8592  Dequeue from Q1\
            Enqueue item to Q2\
        q2_front_distance \uc0\u8592  size of Q2 - group_size\
\
    Function MoveGroupFromQ2ToQ1():\
        for i \uc0\u8592  1 to group_size:\
            item \uc0\u8592  Dequeue from Q2\
            Enqueue item to Q1\
        group_size \uc0\u8592  group_size - 2\
\
    Function PopFromQ1():\
        for i \uc0\u8592  1 to size of Q1 - 1:\
            item \uc0\u8592  Dequeue from Q1\
            Enqueue item to Q1\
        return Dequeue from Q1\
\
    Function ReorderQ2():\
        items_moved \uc0\u8592  0\
        while items_moved < group_size AND q2_front_distance > 0:\
            item \uc0\u8592  Dequeue from Q2\
            Enqueue item to Q2\
            q2_front_distance \uc0\u8592  q2_front_distance - 1\
            items_moved \uc0\u8592  items_moved + 1\
\
    Function IsEmpty():\
        return total_elements = 0\
\
    Function Size():\
        return total_elements\
\
Time Complexity Analysis:\
- Push: O(\uc0\u8730 n) amortized\
  - ReorderQ2: O(\uc0\u8730 n) in worst case\
  - MoveGroupToQ2: O(\uc0\u8730 n) when triggered (every \u8730 n pushes)\
- Pop: O(\uc0\u8730 n) worst case\
  - ReorderQ2: O(\uc0\u8730 n) in worst case\
  - MoveGroupFromQ2ToQ1: O(\uc0\u8730 n) when Q1 is empty\
  - PopFromQ1: O(\uc0\u8730 n) to cycle through Q1\
\
Space Complexity:\
- O(n) total, split between Q1 and Q2}